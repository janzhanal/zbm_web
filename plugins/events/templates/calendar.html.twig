{% extends 'partials/base.html.twig' %}

{% block content %}
    {% set todayUrl = page.url ~ '/year:' ~ "now"|date('Y') ~ '/month:' ~ "now"|date('m') %}
    {% set prevMonthUrl = page.url ~ '/year:' ~ calendar.prevMonth|date('Y') ~ '/month:' ~ calendar.prevMonth|date('m') %}
    {% set nextMonthUrl = page.url ~ '/year:' ~ calendar.nextMonth|date('Y') ~ '/month:' ~ calendar.nextMonth|date('m') %}

	<div class="calendar-content">{{ page.content }}</div>
	
    <div class="row">
    <div class="cal col-sm-8 col-12">
        
        
        <div class="cal-container-outer">
        <div class="cal-container-inner">
        <div class="cal-controls row justify-content-center no-gutters">
        

        <div class="col-7">
            <a href="{{ prevMonthUrl }}" data-url="{{ prevMonthUrl }}" class="cal-link cal-button">&lsaquo;</a>
            <span class="month-title">{{ calendar.selectedMonth|localizeddate('medium', 'none', 'cs','Europe/Prague', 'LLLL Y') }}</span>
            <a href="{{ nextMonthUrl }}" data-url="{{ nextMonthUrl }}" class="cal-link cal-button">&rsaquo;</a>
        </div>
        <div class="col-auto">
			 <a href="{{ todayUrl }}" data-url="{{ todayUrl}}" class="cal-link">
                <span class="cal-button cal-today"  data-date="{{"today"|date("U")}}"  data-events='{{calendar.events["today"|date("U")]|json_encode()}}'>dnes</span>
             </a>
        </div>
        </div>
        <div class="cal-header">
            <div class="cal-header-day">Po</div>
            <div class="cal-header-day">Út</div>
            <div class="cal-header-day">St</div>
            <div class="cal-header-day">Čt</div>
            <div class="cal-header-day">Pá</div>
            <div class="cal-header-day">So</div>
            <div class="cal-header-day">Ne</div>
        </div>
        <div class="cal-table">
        {% set currentDay = calendar.startDay %}
        {% for week in range(1, calendar.weekCount) %}
            
            
            <div class="cal-row-outer">
            <div class="cal-row-inner">
            {% for day in 1..7 %}
                
                <div 
                    {% if calendar.selectedMonth|date("m") == currentDay|date("m") %} 
                        class="cal-day"
                    {% else %}
                        class="cal-day diff-month"
                    {% endif %}
                    data-date="{{currentDay|date("U")}}" 
                    data-events='{{calendar.events[currentDay|date("U")]|json_encode()}}'
                    style="cursor:help"
                    {{dump(calendar.events[currentDay|date("U")]|json_encode())}}
                >
                             
                    <div class="cal-day-tag-outer">
                        <h2 class="cal-day-tag-inner {% if currentDay|date("dmY") == "now"|date("dmY") %} cal-today {% endif %}">
                            {{currentDay|date("j")}}
                        </h2>
                    </div>
                    {% for event in calendar.events[currentDay|date("U")] %}
                        <div class="event {{event.header.type ? event.header.type : "J" }}" data-groups="{% for g in event.header.taxonomy.skupina %}{{g}}{% endfor %}">
                        {% switch event.header.type %}
                        {% case 'Z' %}
                            závod
                        {% case 'T' %}
                            trénink
                        {% case 'M' %}
                            mapový tr.
                        {% case 'S' %}
                            soustředění
                        {% case 'BZL' %}
                            BZL
                        {% case 'BBP' %}
                            běžecký záv.
                        {% default %}
                            {{event.header.template}}
                        {% endswitch %}
                        </div>                        
                    {% endfor %}
                
                </div>
                {% set currentDay = currentDay|date_modify("+1 day") %}
            {% endfor %}
            </div>
            </div>
            

        {% endfor %}
        </div>
        </div>
        </div>
        
        </div>
        <div class="col-sm-4 col-12">

		<div id="cal-events-outer">
		  <div id="cal-events-inner">
				<h2 id="cal-events-title"></h2>
                <p id="cal-events-empty"></p>
				<ul id="cal-events-list"></ul>
			</div>
		</div>
        <hr>
        <h5>Filtr akcí dle skupiny:</h5>
        
                <input type="checkbox" value="all" id="filter-all" checked />
                <label for="filter-all">Vše</label><br>
                <input class="filter" type="checkbox" value="zabicky" id="filter-zabicky" />
                <label for="filter-zabicky">Žabičky</label>
                <input class="filter" type="checkbox" value="pulci1" id="filter-pulci1" />
                <label for="filter-pulci1">Pulci 1</label>
                <input class="filter" type="checkbox" value="pulci2" id="filter-pulci2" />
                <label for="filter-pulci2">Pulci 2</label>
                <input class="filter" type="checkbox" value="zaci1" id="filter-zaci1" />
                <label for="filter-zaci1">Žáci 1</label>
                <input class="filter" type="checkbox" value="zaci2" id="filter-zaci2" />
                <label for="filter-zaci2">Žáci 2</label>
                <input class="filter" type="checkbox" value="dorost" id="filter-dorost" />
                <label for="filter-dorost">Dorost+</label>
        <hr>
        <a href="/calendar/ical"><i class="fa fa-arrow-circle-right" aria-hidden="true"></i> Export a synchronizace kalendáře</a>

    <br><br>        
    </div>
    </div>
		
<script>
window.addEventListener('DOMContentLoaded', () => {


    var date_opt = { day: "numeric", month: "long", year: "numeric"};

    var sortOrder = ['zabicky','pulci1','pulci2','zaci1','zaci2','dorost'];

    var title = document.getElementById("cal-events-title"),
        list = document.getElementById("cal-events-list"),
        empty = document.getElementById("cal-events-empty"),
        filter_all = document.getElementById('filter-all'),
        filters = document.querySelectorAll(".filter");

    function checkEmptyList(){
        if (list.innerHTML === "") {
            empty.innerHTML = "<p>žádné akce</p>";
        } else if ($(list).children('li:visible').length === 0) {
            empty.innerHTML = "<p>žádné akce pro zvolené skupiny</p>";
        } else {
            empty.innerHTML = "";
        }
    }

    function showEvents(e){
        if(e.type == "click") {
            e = e.currentTarget;
        }
        list.innerHTML = "";
        date = new Date(e.getAttribute('data-date')* 1000);
        title.innerHTML = date.toLocaleDateString('cs-CZ', date_opt);
        events = JSON.parse(e.getAttribute('data-events'));
        
        if (events) {
            events.forEach( event => {  
                var li = document.createElement('li');
                li.innerHTML =  '<a href="' + event.header.url + '" target="_blank">' +
                                    event.header.title + '<br>' +
                                    '<span class="cal-list-groups">' + 
                                        (event.header.taxonomy ? 
                                            Object.values(event.header.taxonomy.skupina)
                                                .sort((a, b) => sortOrder.indexOf(a) - sortOrder.indexOf(b))
                                                .join(', ') 
                                            : "") + 
                                    '</span>' +
                                '</a>';
                li.classList.add("event");
                li.classList.add(event.header.type ? event.header.type : "J");
                li.setAttribute('data-groups', event.header.taxonomy ? Object.values(event.header.taxonomy.skupina).join('') : "");
                if (!filter_all.checked) {
                    li.style.display = "none";
                    filters.forEach( f => {
                        if (f.checked && li.getAttribute('data-groups').indexOf(f.value) >= 0) {
                            li.style.display = "list-item";
                        }
                    })
                }
                list.appendChild(li);      
            });
        } 
        checkEmptyList();
    }

    function fixLinks(){
        var urlExt = $(".filter:checked")
            .map( function(){ 
                return this.value;  
            }).get().join();
        
        $(".cal-link").each(function(){
            this.href = this.getAttribute("data-url");
            this.href += urlExt ? ("/groups:" + urlExt) : "";
        })
    }

    function filter(){
        let events = document.querySelectorAll(".event");
        if (filter_all.checked) {
            events.forEach(event => {
                if (event.nodeName === "LI") {
                    event.style.display = "list-item";
                } else {
                    event.style.display = "block";
                }
            })
            return;
        }
        curr_filter = [];
        filters.forEach(f => {
            if (f.checked) {
                curr_filter.push(f);
            }
        })
        events.forEach(event => {
            event.style.display = "none";
            curr_filter.forEach(f => {
                if (event.dataset.groups.indexOf(f.value) >= 0) {
                    if (event.nodeName === "LI") {
                        event.style.display = "list-item";
                    } else {
                        event.style.display = "block";
                    }
                }
            });
        });
        checkEmptyList();
        fixLinks();
    }

    filters.forEach(f => {
        f.addEventListener("change", function(){
            filter_all.checked = false;
            filter();
        })
    })

    filter_all.addEventListener('change', function(){
        let events = document.querySelectorAll(".event");
        filters.forEach(f => {
            f.checked = false;
        })
        if (filter_all.checked) {
            events.forEach(event => {
                if (event.nodeName === "LI") {
                    event.style.display = "list-item";
                } else {
                    event.style.display = "block";
                }
            })
        } else {
           events.forEach(event => {
                event.style.display = "none";
            })
        }
        checkEmptyList();
        fixLinks();
    })

    // onload
    var groups = '{{ grav.uri.param("groups") }}';
    if (groups) {
        filters.forEach(f => {
            f.checked = false;
        })
        filter_all.checked = false;

        groups.split(",").forEach(group => {
            filters.forEach(f => {
                if(f.value == group) {
                    f.checked = true;
                }
            });  
        })   
    };

    showEvents(document.querySelector('.cal-today'));
    filter();
    document.querySelectorAll('.cal-day').forEach( day => {
        day.addEventListener('click', showEvents);
    })
        
    
    
});
</script>
{% endblock %}